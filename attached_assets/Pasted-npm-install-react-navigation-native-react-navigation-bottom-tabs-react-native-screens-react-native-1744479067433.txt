npm install @react-navigation/native @react-navigation/bottom-tabs react-native-screens react-native-safe-area-context react-native-gesture-handler react-native-reanimated react-native-vector-icons

If you're using Expo, use:

npx expo install @react-navigation/native @react-navigation/bottom-tabs react-native-screens react-native-safe-area-context react-native-gesture-handler react-native-reanimated react-native-vector-icons

2. Create Navigation Structure

ðŸ“„ src/navigation/AppNavigator.js

import React from 'react';
import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
import { NavigationContainer } from '@react-navigation/native';
import Icon from 'react-native-vector-icons/Ionicons';

import RealTimeLocationMap from '../components/RealTimeLocationMap';
import WalletScreen from '../screens/WalletScreen';
import RewardsScreen from '../screens/RewardsScreen';
import SettingsScreen from '../screens/SettingsScreen';

const Tab = createBottomTabNavigator();

const AppNavigator = () => {
  return (
    <NavigationContainer>
      <Tab.Navigator
        screenOptions={({ route }) => ({
          headerShown: false,
          tabBarIcon: ({ color, size }) => {
            let iconName;

            if (route.name === 'Map') iconName = 'map-outline';
            else if (route.name === 'Wallet') iconName = 'wallet-outline';
            else if (route.name === 'Rewards') iconName = 'gift-outline';
            else if (route.name === 'Settings') iconName = 'settings-outline';

            return <Icon name={iconName} size={size} color={color} />;
          },
          tabBarActiveTintColor: '#ff6347',
          tabBarInactiveTintColor: 'gray',
        })}
      >
        <Tab.Screen name="Map" component={RealTimeLocationMap} />
        <Tab.Screen name="Wallet" component={WalletScreen} />
        <Tab.Screen name="Rewards" component={RewardsScreen} />
        <Tab.Screen name="Settings" component={SettingsScreen} />
      </Tab.Navigator>
    </NavigationContainer>
  );
};

export default AppNavigator;

3. Update App.js

ðŸ“„ App.js

import React from 'react';
import { SafeAreaView, StyleSheet } from 'react-native';
import AppNavigator from './src/navigation/AppNavigator';

export default function App() {
  return (
    <SafeAreaView style={styles.container}>
      <AppNavigator />
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
});

4. Placeholder Screens

Create simple screens you can build later:

ðŸ“„ src/screens/WalletScreen.js

import React from 'react';
import { View, Text, StyleSheet } from 'react-native';

const WalletScreen = () => (
  <View style={styles.container}>
    <Text style={styles.text}>Wallet Screen</Text>
  </View>
);

const styles = StyleSheet.create({
  container: { flex: 1, justifyContent: 'center', alignItems: 'center' },
  text: { fontSize: 20 },
});

export default WalletScreen;

Repeat for RewardsScreen.js and SettingsScreen.js.
ðŸš€ Result:

You now have a bottom tab navigation bar like Google Maps or Waze, perfectly tailored for your crypto GPS app.